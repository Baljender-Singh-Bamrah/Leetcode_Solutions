/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> spiralMatrix(int m, int n, ListNode* head) {
        vector<vector<int>> result=vector<vector<int>>(m,vector<int>(n,-1));
        int t=0, b=m-1,l=0,r=n-1;
        while(t<=b){
            
                for(int i=l ; i<=r ; i++){
                    if(head){
                        result[t][i]=head->val;
                        head=head->next;
                    }

                    else{
                        return result;
                    }
                }
                
                t++;

                for(int i=t ; i<=b ; i++){
                    if(head){
                        result[i][r]=head->val;
                        head=head->next;
                    }

                    else{
                        return result;
                    }
                }
                
                r--;
                for(int i=r ; i>=l ; i--){
                    if(head){
                        result[b][i]=head->val;
                        head=head->next;
                    }

                    else{
                        return result;
                    }
                }
                

                for(int i=b-1 ; i>=t ; i--){
                    if(head){
                        result[i][l]=head->val;
                        head=head->next;
                    }

                    else{
                        return result;
                    }
                }
                
                b--;
                l++;
            }
        return result;
    }
};
