class Solution {
public:
    vector<bool> checkIfPrerequisite(int n, vector<vector<int>>& pre, vector<vector<int>>& queries) {
        unordered_map<int,unordered_set<int>> mp;

        for(auto it : pre){
            mp[it[1]].insert(it[0]);
        }

        for(int i=0 ; i<n ; i++) {
            for(int j=0 ; j<n ; j++) {
                if(mp[j].find(i)!=mp[j].end()) {
                    mp[j].insert(mp[i].begin(),mp[i].end());
                }
            }
        }

        vector<bool> res;
        for(auto it:queries) {
            if(mp[it[1]].find(it[0])!=mp[it[1]].end()) {
                res.push_back(1);
            } else{
                res.push_back(0);
            }
        }

        return res;
    }
};
