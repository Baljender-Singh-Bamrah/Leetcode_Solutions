Approach-1: Georg Cantor Algorithm

class Solution {
public:
    string findDifferentBinaryString(vector<string>& nums) {
        string ans="";
        for(int i=0 ; i<nums.size() ; i++) {
            if(nums[i][i]=='0'){
                ans+='1';
            } else{
                ans+='0';
            }
        }
        return ans;
    }
};

Approach-2: Using bitset

class Solution {
public:
    string findDifferentBinaryString(vector<string>& nums) {
        unordered_set<string> res(nums.begin(), nums.end());
        int n=nums.size();
        for(int i=0 ; i<(1<<n) ; i++) {
            string ans= bitset<16>(i).to_string().substr(16-n);
            if(!res.count(ans)){
                return ans;
            }
        }
        return "";
    }
};
