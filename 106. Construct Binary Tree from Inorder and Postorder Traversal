/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    unordered_map<int,int> mp;
    TreeNode* helper(vector<int>& inorder, vector<int>& postorder, int start, int end, int &idx) {
        if(start > end) return NULL;
        TreeNode *root = new TreeNode(postorder[idx]);
        int x = mp[postorder[idx--]];
        root->right = helper(inorder, postorder, x+1, end, idx);
        root->left = helper(inorder, postorder, start, x-1, idx);
        return root;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        for(int i=0 ; i<inorder.size() ; i++) {
            mp[inorder[i]]=i;
        }
        int n=inorder.size()-1;
        return helper(inorder, postorder, 0, n, n);
    }
};
