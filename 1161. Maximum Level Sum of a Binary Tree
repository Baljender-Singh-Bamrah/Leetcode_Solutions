/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<pair<int,int>> v;

    void add(TreeNode *head , int lvl) {
        if(!head){
            return;
        }

        v.push_back({lvl,head->val});

        add(head->left,lvl+1);
        add(head->right,lvl+1);
    } 
    int maxLevelSum(TreeNode* root) {
        add(root,1);
        sort(v.begin(),v.end());
        int sum=0 , lvl=0 , msum=INT_MIN, l=1;
        for(auto it:v) {
            if(l!=it.first) {
                if(sum>msum){
                    msum=sum;
                    lvl=it.first-1;
                }
                sum=0;
                l++;
            }
            sum+=it.second;
        }
        if(sum>msum){
            lvl=v.back().first;
        }

        return lvl;
    }
};
