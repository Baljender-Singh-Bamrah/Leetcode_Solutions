class Solution {
public:
    vector<int> lexicographicallySmallestArray(vector<int>& nums, int limit) {
        // num, indexes
        vector<pair<int, int>> numIndx(nums.size());
        for(int i = 0; i < nums.size(); i++) {
            numIndx[i] = {nums[i], i};
        }

        sort(numIndx.begin(), numIndx.end());
        int preIndx = 0;
        vector<int> indxes = {numIndx[0].second};
        for(int i = 1; i < nums.size(); i++) {
            if(numIndx[i].first - numIndx[i-1].first <= limit) {
                indxes.push_back(numIndx[i].second);
            } 
            if(numIndx[i].first - numIndx[i-1].first > limit || i == nums.size()-1)
             {
                sort(indxes.begin(), indxes.end());
                for(int j = 0; j < indxes.size(); j++) {
                    nums[indxes[j]] = numIndx[preIndx++].first;
                }
                // restart index for next limit group
                indxes = {numIndx[i].second};
            }
        }
        return nums;
    }
};
