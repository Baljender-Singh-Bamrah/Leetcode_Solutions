class Solution {
public:
    int row, col;
    vector<vector<int>> dp;

    int solve(vector<vector<int>>& matrix, int i, int j) {
        if(i>=row || j>=col || matrix[i][j]==0) {
            return 0;
        }

        if(dp[i][j]!=-1) return dp[i][j];

        int right = solve(matrix, i, j+1);
        int bottom = solve(matrix, i+1, j);
        int diagonal = solve(matrix, i+1, j+1);

        return dp[i][j] = 1+ min({right, diagonal, bottom});
    }
    int countSquares(vector<vector<int>>& matrix) {
        row = matrix.size(), col = matrix[0].size();
        dp.resize(row+1, vector<int>(col+1, -1));
        int result = 0;
        for(int i=0 ; i<row ; i++) {
            for(int j=0 ; j<col ; j++) {
                if(matrix[i][j]==1) {
                    result += solve(matrix, i, j);
                }
            }
        }
        return result;
    }
};
