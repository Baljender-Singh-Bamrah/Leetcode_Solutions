class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) {
        int n = nums.size();
        if (n < 2)
            return false;
        
        unordered_map<int, int> remainderIndex;
        int sum = 0;
        remainderIndex[0] = -1; // Initialize with a sum of 0 at index -1
        
        for (int i = 0; i < n; ++i) {
            sum += nums[i];
            if (k != 0)
                sum %= k; // Handle cases when k != 0
            if (remainderIndex.find(sum) != remainderIndex.end()) {
                if (i - remainderIndex[sum] > 1) // Check if subarray length is at least 2
                    return true;
            } else {
                remainderIndex[sum] = i;
            }
        }
        
        return false;
    }
};
