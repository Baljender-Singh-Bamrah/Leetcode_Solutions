class Solution {
public:
    vector<int> parent;
    int find(int x){
        if(x==parent[x])
            return parent[x];
        return find(parent[x]);
    }
    void Union(int x, int y){
        int px=find(x);
        int py=find(y);
        if(px==py)
            return;
        else if(px<py)
            parent[py]=px;
        else
            parent[px]=py;
    }
    string smallestEquivalentString(string s1, string s2, string s) {
        parent.resize(26);
        for(int i=0; i<26; i++){
            parent[i]=i;
        }
        int n=s1.length();
        for(int i=0; i<n; i++){
            Union(s1[i]-'a', s2[i]-'a');
        }
        for(int i=0; i<s.length(); i++){
            char ch=find(s[i]-'a')+'a';
            s[i]=ch;
        }
        return s;
    }
};
