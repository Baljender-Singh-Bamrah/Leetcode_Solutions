/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        unordered_set<int> st;
        for(auto it:nums){
            st.insert(it);
        }

        ListNode *temp=head;
        bool flag=true;
        
        while(temp && temp->next){
            while(flag && st.find(temp->val)!=st.end()){
                temp=temp->next;
            }

            if(!flag && st.find(temp->next->val)!=st.end()){
                temp->next=temp->next->next;
            }

            else if(flag && st.find(temp->val)==st.end()){
                head=temp;
                flag=false;
            }

            else{
                temp=temp->next;
            }
        }
        return head;
    }
};
